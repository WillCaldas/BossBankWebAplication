// <auto-generated />
using System;
using BossBank.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BossBank.Web.Migrations
{
    [DbContext(typeof(BossBankDbContext))]
    [Migration("20220131125211_Update-BD-Colab")]
    partial class UpdateBDColab
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BossBank.Data.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BairroCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bairro_cliente");

                    b.Property<string>("CNPJCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CNPJ_cliente");

                    b.Property<string>("CidadeCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cidade_cliente");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cpf_cliente");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email_cliente");

                    b.Property<string>("EmpreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("empre_cliente");

                    b.Property<string>("EstadoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("estado_cliente");

                    b.Property<string>("FunCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("func_cliente");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_cliente");

                    b.Property<string>("RuaCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("rua_cliente");

                    b.Property<string>("SalarioCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sal_cliente");

                    b.Property<string>("TelCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tel_cliente");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("BossBank.Data.Entities.Colaborador", b =>
                {
                    b.Property<int>("IdColab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_colab")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoColab")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cargo_colab");

                    b.Property<string>("CpfColab")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cpf_colab");

                    b.Property<string>("GestorColab")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gestor_colab");

                    b.Property<string>("NomeColab")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nome_colab");

                    b.Property<string>("SalarioColab")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("salario_colab");

                    b.Property<string>("SetorColab")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("setor_colab");

                    b.HasKey("IdColab");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("BossBank.Data.Entities.ContaCorrente", b =>
                {
                    b.Property<string>("ContaCc")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("conta_cc");

                    b.Property<string>("AgenciaCc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("agencia_cc");

                    b.Property<string>("CreditoCc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("credito_cc");

                    b.Property<int?>("GerenteCcIdColab")
                        .HasColumnType("int");

                    b.Property<string>("SaldoCc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("saldo_cc");

                    b.Property<int?>("TitularCcIdCliente")
                        .HasColumnType("int");

                    b.HasKey("ContaCc");

                    b.HasIndex("GerenteCcIdColab");

                    b.HasIndex("TitularCcIdCliente");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity("BossBank.Data.Entities.ContaCorrente", b =>
                {
                    b.HasOne("BossBank.Data.Entities.Colaborador", "GerenteCc")
                        .WithMany()
                        .HasForeignKey("GerenteCcIdColab");

                    b.HasOne("BossBank.Data.Entities.Cliente", "TitularCc")
                        .WithMany()
                        .HasForeignKey("TitularCcIdCliente");

                    b.Navigation("GerenteCc");

                    b.Navigation("TitularCc");
                });
#pragma warning restore 612, 618
        }
    }
}
