// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace BossBank.Data.Models
{
    public partial class BossbankDBContext : DbContext
    {
        public BossbankDBContext()
        {
        }

        public BossbankDBContext(DbContextOptions<BossbankDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Colaborador> Colaborador { get; set; }
        public virtual DbSet<ContaCorrente> ContaCorrente { get; set; }
        public virtual DbSet<ContaPoupanca> ContaPoupanca { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=MIDPIXELDESK\\SQLDATABASE;Initial Catalog=BossBankDB;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_CI_AS");

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.Property(e => e.CidadeCliente).IsUnicode(false);

                entity.Property(e => e.CpfCliente).IsUnicode(false);

                entity.Property(e => e.EndCliente).IsUnicode(false);

                entity.Property(e => e.NomeCliente).IsUnicode(false);

                entity.Property(e => e.ProfCliente).IsUnicode(false);

                entity.Property(e => e.RendaCliente).IsUnicode(false);
            });

            modelBuilder.Entity<Colaborador>(entity =>
            {
                entity.Property(e => e.CargoColab).IsUnicode(false);

                entity.Property(e => e.CpfColab).IsUnicode(false);

                entity.Property(e => e.NomeColab).IsUnicode(false);

                entity.Property(e => e.SalarioColab).IsUnicode(false);
            });

            modelBuilder.Entity<ContaCorrente>(entity =>
            {
                entity.Property(e => e.CreditoCc).IsUnicode(false);

                entity.Property(e => e.SaldoCc).IsUnicode(false);

                entity.HasOne(d => d.GerenteCcNavigation)
                    .WithMany(p => p.ContaCorrente)
                    .HasForeignKey(d => d.GerenteCc)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ContaCorrente_Colaborador");

                entity.HasOne(d => d.TitularCcNavigation)
                    .WithMany(p => p.ContaCorrente)
                    .HasForeignKey(d => d.TitularCc)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ContaCorrente_Cliente");
            });

            modelBuilder.Entity<ContaPoupanca>(entity =>
            {
                entity.Property(e => e.CreditoCp).IsUnicode(false);

                entity.Property(e => e.SaldoCp).IsUnicode(false);

                entity.HasOne(d => d.GerenteCpNavigation)
                    .WithMany(p => p.ContaPoupanca)
                    .HasForeignKey(d => d.GerenteCp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ContaPoupanca_Colaborador");

                entity.HasOne(d => d.TitularCpNavigation)
                    .WithMany(p => p.ContaPoupanca)
                    .HasForeignKey(d => d.TitularCp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ContaPoupanca_Cliente");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}